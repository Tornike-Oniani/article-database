<UserControl x:Class="MainLib.Views.Main.DataView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:MainLib.Views.Main"
             xmlns:properties="clr-namespace:MainLib.ViewModels.Properties;assembly=MainLib.ViewModels"
             xmlns:converters="clr-namespace:MainLib.Views.Converters"
             xmlns:commonConverters="clr-namespace:Lib.Views.Converters;assembly=Lib.Views"
             xmlns:ap="clr-namespace:Lib.Views.Attached_Properties;assembly=Lib.Views"
             xmlns:aps="clr-namespace:Lib.Styles.Attached_Properties;assembly=Lib.Styles"
             xmlns:usercontrols="clr-namespace:Lib.Views.UserControls;assembly=Lib.Views"
             mc:Ignorable="d" 
             Focusable="True"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <commonConverters:CheckToListConverter x:Key="CheckToList" />
        <commonConverters:ListToVisibilityConverter x:Key="ListToVisibility" />
        <commonConverters:NumberToSICConverter x:Key="NumberToSIC" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibility" />
        <converters:ActiveStatusToStyleConverter x:Key="ActiveStatusToStyle" />
        <converters:IsIntToBoolConverter x:Key="IsIntToBool" />

        <!-- Accordion -->
        <Storyboard x:Key="openDropdown">
            <DoubleAnimation              
                Storyboard.TargetName="accordion__dropdown"
                Storyboard.TargetProperty="Height"
                From="0"
                To="540"
                Duration="0:0:0.15"
                />
        </Storyboard>
        <Storyboard x:Key="closeDropdown">
            <DoubleAnimation
                Storyboard.TargetName="accordion__dropdown"
                Storyboard.TargetProperty="Height"
                From="540"
                To="0"
                Duration="0:0:0.15"
                />
        </Storyboard>
        <Style x:Key="Accordion" TargetType="{x:Type ToggleButton}">
            <!-- Generic styling -->
            <Setter Property="BorderThickness" Value="1 1 1 1" />
            <Setter Property="BorderBrush" Value="#dee2e6" />
            <Setter Property="Background" Value="#f2f2f2" />
            <Setter Property="Foreground" Value="#212529" />
            <Setter Property="Padding" Value="15 10 15 10" />
            <Setter Property="Cursor" Value="Hand" />
            <!-- Template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            BorderThickness="1 1 1 1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="6 6 0 0"
                            Padding="{TemplateBinding Padding}"
                            >
                            <StackPanel Orientation="Horizontal">
                                <TextBlock 
                                    x:Name="text"
                                    Text="{TemplateBinding Content}"
                                    Foreground="{TemplateBinding Foreground}"
                                    FontSize="18"
                                    VerticalAlignment="Center"
                                    Margin="0 0 6 0"
                                    />
                                <materialDesign:PackIcon 
                                    x:Name="arrow"
                                    Kind="KeyboardArrowDown"
                                    Width="32"
                                    Height="32"
                                    >
                                    <materialDesign:PackIcon.RenderTransform>
                                        <RotateTransform 
                                            Angle="0" 
                                            CenterX="16" 
                                            CenterY="16" />
                                    </materialDesign:PackIcon.RenderTransform>
                                </materialDesign:PackIcon>
                            </StackPanel>
                        </Border>
                        
                        <!-- Triggers on template level -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="arrow"
                                                Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                                                From="0"
                                                To="180"
                                                Duration="0:0:0.15"
                                                />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="arrow"
                                                Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                                                From="180"
                                                To="0"
                                                Duration="0:0:0.15"
                                                />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <!-- Triggers -->
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#e7f1ff" />
                    <Setter Property="Foreground" Value="#0c63e4" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Pagination-->
        <Style x:Key="PaginationWrapper" TargetType="{x:Type ListBox}">
            <Setter Property="BorderThickness" Value="1 1 0 1" />
            <Setter Property="BorderBrush" Value="#dee2e6" />
            <!-- Items host -->
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel 
                            Orientation="Horizontal"
                            IsItemsHost="True"
                            />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <!-- Items host styling -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            >
                            <ItemsPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Item styling -->
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Background" Value="#ffffff" />
                        <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="IsEnabled" Value="{Binding Converter={StaticResource IsIntToBool}}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="0 0 1 0"
                                        BorderBrush="#dee2e6"
                                        Padding="12 6 12 6">
                                            <ContentPresenter
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        
                        <!-- Item triggers -->
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#e9ecef" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
                                <Setter Property="Foreground" Value="#ffffff" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#000000" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PaginationButton__Left" TargetType="{x:Type Button}" BasedOn="{x:Null}">
            <Setter Property="Background" Value="#ffffff" />
            <Setter Property="BorderThickness" Value="1 1 0 1" />
            <Setter Property="BorderBrush" Value="#dee2e6" />
            <Setter Property="Padding" Value="12 6 12 6" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="6 0 0 6"
                            >
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <!-- Style Triggers -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e9ecef" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#212529" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="PaginationButton__Right" TargetType="{x:Type Button}" BasedOn="{StaticResource PaginationButton__Left}">
            <Setter Property="BorderThickness" Value="0 1 1 1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="0 6 6 0"
                            >
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Export button style -->
        <Style x:Key="ExportButton" TargetType="{x:Type ToggleButton}" BasedOn="{x:Null}">
            <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
            <Setter Property="BorderThickness" Value="0 0 0 0" />
            <Setter Property="Foreground" Value="#ffffff" />
            <Setter Property="Padding" Value="12 6 12 6" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border 
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="6 6 6 6"
                            >
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <!-- Style triggers -->
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <UserControl.InputBindings>
        <!--<KeyBinding Modifiers="Ctrl" Key="F" 
                    Command="{Binding DataContext.OpenSearchDialogCommand, 
                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" 
                    CommandParameter="{Binding Columns}" />-->
        <KeyBinding Modifiers="Ctrl" Key="B" 
                    Command="{Binding DataContext.OpenBookmarkManagerCommand, 
                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" 
                    CommandParameter="{Binding SelectedArticle}" />
        <KeyBinding Modifiers="Ctrl" Key="R" 
                    Command="{Binding DataContext.OpenReferenceManagerCommand, 
                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" 
                    CommandParameter="{Binding SelectedArticle}" />
    </UserControl.InputBindings>

    <Grid Focusable="True">
        <Grid.Resources>
            <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}" />
        </Grid.Resources>

        <Grid.RowDefinitions>
            <!-- Proxy column -->
            <RowDefinition Height="Auto" />
            <!-- Top menu column -->
            <RowDefinition Height="Auto" />
            <!-- Data grid column -->
            <RowDefinition Height="*" />
            <!-- Pagination column -->
            <RowDefinition Height="Auto" />
            <!-- Pagination column -->
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Proxy element to change datagrid columns' DataContext -->
        <ContentControl 
            Visibility="Collapsed" 
            Content="{StaticResource ProxyElement}" 
            Grid.Row="0" 
            />

        <!-- Search options -->
        <Grid 
            Margin="5 5 5 5"
            Grid.Row="1"
            >
            <Grid.RowDefinitions>
                <!-- Search options header row -->
                <RowDefinition Height="Auto" />
                <!-- Search options content row-->
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Search options header -->
            <Grid Grid.Row="0">
                <ToggleButton
                    x:Name="accordion"
                    Content="Open detailed search"
                    IsChecked="{Binding SearchOptionsIsChecked}"
                    Command="{Binding SwitchToDetailedSearchCommand}"
                    Style="{StaticResource Accordion}"
                    Grid.Column="0"
                    >
                    <ToggleButton.Triggers>
                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                            <BeginStoryboard Storyboard="{StaticResource openDropdown}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                            <BeginStoryboard Storyboard="{StaticResource closeDropdown}" />
                        </EventTrigger>
                    </ToggleButton.Triggers>
                </ToggleButton>
                <!-- Simple search -->
                <Grid 
                    HorizontalAlignment="Right"
                    Margin="0 0 15 0"
                    Background="Transparent"
                    >
                    <TextBox
                        Text="{Binding SimpleSearch, UpdateSourceTrigger=PropertyChanged}"
                        aps:TextBoxHelper.Watermark="Simple search"
                        Visibility="{
                            Binding IsChecked, 
                            ElementName=accordion, 
                            Converter={StaticResource InverseBoolToVisConverter}}"
                        Style="{StaticResource WatermarkTextBoxSmall}"
                        Width="300"
                        VerticalAlignment="Center"
                        >
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding LoadArticlesSimpleCommand}" />
                        </TextBox.InputBindings>
                    </TextBox>
                    <Button
                        Command="{Binding LoadArticlesSimpleCommand}"
                        Visibility="{
                            Binding IsChecked, 
                            ElementName=accordion, 
                            Converter={StaticResource InverseBoolToVisConverter}}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Padding="5 0 5 0"
                        Grid.Column="1"
                        >
                        <Button.Content>
                            <materialDesign:PackIcon 
                                Kind="Search"
                                Width="25"
                                />
                        </Button.Content>
                    </Button>
                </Grid>
            </Grid>
            <!-- Search options content -->
            <Border
                x:Name="accordion__dropdown"
                BorderThickness="1 0 1 1"
                BorderBrush="#f0f0f0"
                Height="0"
                Grid.Row="1"
                >
                <ScrollViewer Padding="15 10 15 10">
                    <StackPanel 
                        Width="550"
                        HorizontalAlignment="Left"
                        >
                        <!-- Checkboxes -->
                        <StackPanel Margin="0 0 0 15">
                            <TextBlock 
                                Text="Columns:" 
                                FontSize="16" 
                                Margin="0 0 0 5" 
                                />
                            <!-- Column checkboxes -->
                            <StackPanel 
                                Orientation="Horizontal" 
                                Grid.Column="0"
                                >
                                <CheckBox 
                                    Content="Authors"
                                    FontSize="16" 
                                    Margin="0 0 5 0" 
                                    IsChecked="{
                                        Binding Columns, 
                                        Converter={StaticResource CheckToList}, 
                                        ConverterParameter='Authors'}" 
                                    />
                                <CheckBox 
                                    Content="Keywords"
                                    FontSize="16" 
                                    Margin="0 0 5 0" 
                                    IsChecked="{
                                        Binding Columns, 
                                        Converter={StaticResource CheckToList}, 
                                        ConverterParameter='Keywords'}" 
                                    />
                                <CheckBox 
                                    Content="Year" 
                                    Margin="0 0 5 0" 
                                    IsChecked="{
                                        Binding Columns, 
                                        Converter={StaticResource CheckToList}, 
                                        ConverterParameter='Year'}" 
                                    />
                                <CheckBox 
                                    Content="Comment" 
                                    FontSize="16" 
                                    Margin="0 0 5 0" 
                                    IsChecked="{
                                        Binding Columns, 
                                        Converter={StaticResource CheckToList}, 
                                        ConverterParameter='PersonalComment'}" 
                                    />
                                <CheckBox 
                                    Content="SIC" 
                                    FontSize="16" 
                                    IsChecked="{
                                        Binding Columns, 
                                        Converter={StaticResource CheckToList}, 
                                        ConverterParameter='SIC'}" 
                                    />
                            </StackPanel>
                        </StackPanel>
                        <!-- Title search-->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <!-- Title column-->
                                <ColumnDefinition Width="*" />
                                <!-- Search mode column -->
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <!-- Title -->
                            <TextBox 
                                x:Name="txbSearch"
                                Text="{Binding FilterTitle, UpdateSourceTrigger=PropertyChanged}" 
                                SpellCheck.IsEnabled="True"
                                materialDesign:HintAssist.Hint="Title" 
                                materialDesign:HintAssist.IsFloating="True" 
                                TextWrapping="Wrap" 
                                FontFamily="Verdana"
                                FontSize="15"
                                Style="{StaticResource MaterialDesignOutlinedTextFieldTextBox}"
                                LostFocus="txbSearch_LostFocus"
                                Margin="5 0 10 15"
                                Grid.Column="0" 
                                />
                            <!-- Word break option -->
                            <CheckBox 
                                IsChecked="{Binding WordBreakMode}"
                                Content="Word Break"
                                IsTabStop="False"
                                Grid.Column="1" 
                                />
                        </Grid>
                        <!-- Authors & keywords -->
                        <Grid Margin="0 0 0 15">
                            <Grid.ColumnDefinitions>
                                <!-- Authors column -->
                                <ColumnDefinition Width="*" />
                                <!-- Keywords column -->
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <!-- Pairing row -->
                                <RowDefinition Height="Auto" />
                                <!-- Collection box row -->
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <!-- Pairing -->
                            <StackPanel 
                                Orientation="Horizontal"
                                Margin="0 0 0 10"
                                Grid.Column="0"
                                Grid.Row="0"
                                >
                                <TextBlock 
                                    Text="Author pairing:" 
                                    Foreground="{StaticResource LabelColorBrush}"
                                    FontSize="15" 
                                    FontWeight="SemiBold"
                                    VerticalAlignment="Center"
                                    Margin="0 0 5 0" 
                                    />
                                <ComboBox 
                                    SelectedValuePath="Content" 
                                    SelectedValue="{Binding SelectedAuthorPairing}"
                                    IsTabStop="False"
                                    >
                                    <ComboBoxItem IsSelected="True">AND</ComboBoxItem>
                                    <ComboBoxItem>OR</ComboBoxItem>
                                </ComboBox>
                            </StackPanel>
                            <!-- Authors -->
                            <usercontrols:CollectionBox 
                                Text="Author"
                                Title="Authors"
                                ItemsSource="{Binding FilterAuthors}" 
                                Restriction="Author"
                                BoxHeight="150"
                                Margin="0 0 10 0" 
                                Grid.Column="0"
                                Grid.Row="1" 
                                />

                            <!-- Pairing -->
                            <StackPanel 
                                Orientation="Horizontal"
                                Margin="0 0 0 10"
                                Grid.Column="1"
                                Grid.Row="0"
                                >
                                <TextBlock 
                                    Text="Keyword pairing:" 
                                    Foreground="{StaticResource LabelColorBrush}"
                                    FontSize="15" 
                                    FontWeight="SemiBold" 
                                    VerticalAlignment="Center"
                                    Margin="0 0 5 0" 
                                    />
                                <ComboBox 
                                    SelectedValuePath="Content" 
                                    SelectedValue="{Binding SelectedKeywordPairing}" 
                                    IsTabStop="False"
                                    >
                                    <ComboBoxItem IsSelected="True">AND</ComboBoxItem>
                                    <ComboBoxItem>OR</ComboBoxItem>
                                </ComboBox>
                            </StackPanel>
                            <!-- Keywords -->
                            <usercontrols:CollectionBox 
                                Text="Keyword"
                                Title="Keywords"
                                ItemsSource="{Binding FilterKeywords}" 
                                Restriction="Keyword"
                                BoxHeight="150"
                                Margin="10 0 0 0" 
                                Grid.Column="1"
                                Grid.Row="1" 
                                />
                        </Grid>
                        <!-- Year -->
                        <TextBox 
                            Text="{Binding FilterYear, UpdateSourceTrigger=PropertyChanged}"
                            aps:TextBoxHelper.Watermark="Year"
                            Style="{StaticResource WatermarkTextBoxSmall}"
                            Width="130"
                            HorizontalAlignment="Left"
                            Margin="0 0 0 15"
                            />
                        <!-- Personal comment -->
                        <TextBox 
                            Text="{Binding FilterPersonalComment, UpdateSourceTrigger=PropertyChanged}" 
                            aps:TextBoxHelper.Watermark="Personal comment"
                            Style="{StaticResource WatermarkTextBox}"
                            FontFamily="Verdana"
                            Margin="0 0 0 15"
                            />
                        <!-- Id filter admin only -->
                        <TextBox 
                            Text="{Binding IdFilter, UpdateSourceTrigger=PropertyChanged}"
                            Visibility="{Binding User.IsAdmin, Converter={StaticResource BoolToVisibility}}"
                            aps:TextBoxHelper.Watermark="Id ex. 1-400"
                            Style="{StaticResource WatermarkTextBoxSmall}"
                            FontFamily="Verdana"
                            Width="130"
                            HorizontalAlignment="Left"
                            Margin="0 0 0 15"
                            />
                        <!-- Buttons -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <!-- Search button column -->
                                <ColumnDefinition Width="*" />
                                <!-- Clear button column -->
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <!-- Search button -->
                            <Button 
                                Content="Search" 
                                Command="{Binding LoadArticlesCommand}"
                                Margin="0 0 5 0" 
                                Grid.Column="0" 
                                />
                            <!-- Clear button -->
                            <Button 
                                Content="Clear" 
                                Command="{Binding ClearCommand}"
                                Margin="5 0 0 0" 
                                Grid.Column="1" 
                                />
                        </Grid>
                    </StackPanel>
                </ScrollViewer>
            </Border>
        </Grid>
        <!-- Top menu -->
        <Border Visibility="Collapsed" Padding="10" Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <!-- Export/Print column -->
                    <ColumnDefinition Width="Auto" />
                    <!-- Comment/SIC column -->
                    <ColumnDefinition Width="Auto" />
                    <!-- Space -->
                    <ColumnDefinition Width="*" />
                    <!-- Mass bookmark column -->
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!-- Export/Print -->
                <StackPanel Orientation="Horizontal" Grid.Column="0">
                    <CheckBox Content="Enable Export" 
                              FontSize="16" 
                              IsChecked="{Binding Columns, Converter={StaticResource CheckToList}, ConverterParameter='Export'}"
                              Command="{Binding EnableExportCommand}" />
                    <Button Name="btnExport" Content="Export" Width="80" Margin="10 0 10 0" Command="{Binding ExportCommand}" />
                    <Button Name="btnPrint" Content="Print" Width="80" IsEnabled="False" Visibility="Collapsed" />
                </StackPanel>

                <!-- Comment/SIC -->
                <StackPanel Orientation="Horizontal" Grid.Column="1" >
                    <Rectangle Width="2" Fill="{StaticResource PrimaryColorBrush}" Margin="15 0 15 0" />
                    <ComboBox ItemsSource="{Binding Users}" DisplayMemberPath="Username" SelectedIndex="{Binding UserIndex}" Width="120" Margin="10 0 0 0" />
                </StackPanel>

                <!-- Mass bookmark -->
                <StackPanel Orientation="Horizontal" 
                            Visibility="{Binding User.IsAdmin, 
                            Converter={StaticResource BoolToVisibility}}"
                            Grid.Column="3">
                    <CheckBox Content="Mass bookmark" 
                              FontSize="16" 
                              IsChecked="{Binding Columns, 
                              Converter={StaticResource CheckToList}, 
                              ConverterParameter='Bookmark'}"
                              Command="{Binding MassBookmarkCommand}"
                              CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                    <Button Content="Bookmark" 
                            Width="100" 
                            Margin="10 0 10 0" 
                            Command="{Binding OpenMassBookmarkManagerCommand}" />
                </StackPanel>
            </Grid>
        </Border>
        <!-- Datagrid -->
        <!-- Each column is bound to command from ArticleGrid style for sorting -->
        <DataGrid Style="{StaticResource ArticleGrid}"
                  FontSize="{Binding Source={x:Static properties:Settings.Default}, Path=FontSize}"
                  ItemsSource="{Binding Articles}"
                  SelectedItem="{Binding SelectedArticle}"
                  VirtualizingStackPanel.VirtualizationMode="Standard"
                  x:Name="myGrid"
                  Grid.Row="2">

            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Padding" Value="10" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                    <ContentPresenter VerticalAlignment="Stretch" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.ContextMenu>
                <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                    <!-- We set these items' commands from code behind -->
                    <MenuItem x:Name="itemAddCommentSIC" Header="Add comment/SIC" IsEnabled="{Binding CanAddPersonal}" Command="{Binding OpenAddPersonalCommand}" />
                    <MenuItem x:Name="itemEdit" Header="Edit record" IsEnabled="{Binding User.IsAdmin}" Command="{Binding OpenEditCommand}" />
                    <MenuItem Header="Delete record" IsEnabled="{Binding User.IsAdmin}" Command="{Binding DeleteArticleCommand}" />
                    <MenuItem x:Name="itemBookmark" Command="{Binding OpenBookmarkManagerCommand}" CommandParameter="{Binding SelectedArticle}">
                        <MenuItem.Header>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="70" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Bookmark" Grid.Column="0" />
                                <TextBlock Text="Ctrl+B" Grid.Column="2" />
                            </Grid>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="itemReference" IsEnabled="{Binding User.IsAdmin}" Command="{Binding OpenReferenceManagerCommand}" CommandParameter="{Binding SelectedArticle}">
                        <MenuItem.Header>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="70" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Reference" Grid.Column="0" />
                                <TextBlock Text="Ctrl+R" Grid.Column="2" />
                            </Grid>
                        </MenuItem.Header>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.InputBindings>
                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding OpenFileCommand}" CommandParameter="{Binding SelectedArticle}" />
            </DataGrid.InputBindings>

            <!-- Data grid columns -->
            <DataGrid.Columns>
                <!-- Title column -->
                <DataGridTemplateColumn Header="Title" Width="*" SortMemberPath="Title">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                Text="{Binding Title}" 
                                TextWrapping="Wrap"
                                ap:TextBlockHighlighter.Selection="{Binding DataContext.FilterTitle, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                ap:TextBlockHighlighter.WordBreakMode="{Binding DataContext.WordBreakMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                ap:TextBlockHighlighter.HighlightColor="{StaticResource HighlightColorBrush}"
                                ap:TextBlockHighlighter.Forecolor="#000000" 
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Authors column -->
                <DataGridTemplateColumn Header="Authors" Width="0.5*" Visibility="{Binding DataContext.Columns, Source={StaticResource ProxyElement}, Converter={StaticResource ListToVisibility}, ConverterParameter='Authors'}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                Text="{Binding Authors}" 
                                TextWrapping="Wrap"
                                ap:TextBlockHighlighter.Selection="{Binding DataContext.AuthorHighlight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                ap:TextBlockHighlighter.WordBreakMode="True"
                                ap:TextBlockHighlighter.HighlightColor="{StaticResource HighlightColorBrush}"
                                ap:TextBlockHighlighter.Forecolor="#000000" 
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Keywords column -->
                <DataGridTemplateColumn Header="Keywords" Width="0.5*" Visibility="{Binding DataContext.Columns, Source={StaticResource ProxyElement}, Converter={StaticResource ListToVisibility}, ConverterParameter='Keywords'}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                Text="{Binding Keywords}" 
                                TextWrapping="Wrap"
                                ap:TextBlockHighlighter.Selection="{Binding DataContext.KeywordHighlight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                ap:TextBlockHighlighter.WordBreakMode="True"
                                ap:TextBlockHighlighter.HighlightColor="{StaticResource HighlightColorBrush}"
                                ap:TextBlockHighlighter.Forecolor="#000000" 
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Year column -->
                <DataGridTemplateColumn 
                    Header="Year" 
                    SortMemberPath="Year" 
                    MinWidth="80" 
                    Width="Auto" 
                    Visibility="{
                        Binding DataContext.Columns, 
                        Source={StaticResource ProxyElement}, 
                        Converter={StaticResource ListToVisibility}, 
                        ConverterParameter='Year'}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Year}" TextWrapping="Wrap" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- File column -->
                <DataGridTemplateColumn Header="FileName" SortMemberPath="FileName" MinWidth="95" Width="Auto" Visibility="{Binding DataContext.Columns, Source={StaticResource ProxyElement}, Converter={StaticResource ListToVisibility}, ConverterParameter='FileName'}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding FileName}" TextWrapping="Wrap" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Comment column -->
                <DataGridTemplateColumn Header="Comment" SortMemberPath="PersonalComment" Width="0.4*" Visibility="{Binding DataContext.Columns, Source={StaticResource ProxyElement}, Converter={StaticResource ListToVisibility}, ConverterParameter='PersonalComment'}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding PersonalComment}" TextWrapping="Wrap" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- SIC column -->
                <DataGridTemplateColumn Header="SIC" SortMemberPath="SIC" MinWidth="70" Width="Auto" Visibility="{Binding DataContext.Columns, Source={StaticResource ProxyElement}, Converter={StaticResource ListToVisibility}, ConverterParameter='SIC'}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding SIC, Converter={StaticResource NumberToSIC}}" TextWrapping="Wrap" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Export column -->
                <DataGridTemplateColumn 
                    Header="Export"
                    MinWidth="78"
                    Width="Auto"
                    Visibility="{
                        Binding DataContext.Columns, 
                        Source={StaticResource ProxyElement}, 
                        Converter={StaticResource ListToVisibility}, 
                        ConverterParameter='Export'}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox
                                IsChecked="{Binding Path=Checked, UpdateSourceTrigger=PropertyChanged}" 
                                Command="{
                                    Binding DataContext.UpdateExportStatusCommand,
                                    RelativeSource={RelativeSource FindAncestor, 
                                    AncestorType={x:Type UserControl}}}" 
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Mass bookmark column -->
                <DataGridTemplateColumn Header="Bookmark" Width="Auto" Visibility="{Binding DataContext.Columns, Source={StaticResource ProxyElement}, Converter={StaticResource ListToVisibility}, ConverterParameter='Bookmark'}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=BMChecked, 
                                                          UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <!-- Pagination (deprecated) -->
        <Border 
            Visibility="Collapsed"
            Padding="10" 
            Grid.Row="3"
            >
            <Grid>
                <Grid.ColumnDefinitions>
                    <!-- Pagination buttons column -->
                    <ColumnDefinition Width="Auto" />
                    <!-- Items per page column -->
                    <ColumnDefinition Width="Auto" />
                    <!-- Section colum -->
                    <ColumnDefinition Width="Auto" />
                    <!-- Dialog button colum -->
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Pagination buttons -->
                <StackPanel Orientation="Horizontal" Grid.Column="0">
                    <Button Margin="0 0 5 0" Command="{Binding PreviousPageCommand}">
                        <materialDesign:PackIcon Kind="ArrowLeft" />
                    </Button>
                    <TextBlock VerticalAlignment="Center" FontSize="16"  Text="{Binding Path=CurrentPage, FallbackValue=1}" />
                    <TextBlock VerticalAlignment="Center" FontSize="16"  Text="/" />
                    <TextBlock VerticalAlignment="Center" FontSize="16"  Text="{Binding Path=TotalPages, FallbackValue=99}" />
                    <Button Margin="5 0 0 0" Command="{Binding NextPageCommand}">
                        <materialDesign:PackIcon Kind="ArrowRight" />
                    </Button>
                </StackPanel>

                <!-- Items per page -->
                <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="10 0 0 0">
                    <TextBlock VerticalAlignment="Center" Text="Items per page:" FontSize="16" />
                    <TextBox Text="{Binding ItemsPerPage}" Width="50" Margin="5 0 10 0"/>
                    <Button Command="{Binding LoadArticlesCommand}">
                        <materialDesign:PackIcon Kind="Refresh" />
                    </Button>
                </StackPanel>

                <!-- Section selection -->
                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding User.IsAdmin, 
                                                 Converter={StaticResource BoolToVisibility}}"
                            Grid.Column="2">
                    <ComboBox ItemsSource="{Binding Sections}"
                              SelectedItem="{Binding SelectedSection}"
                              Width="100"
                              Margin="10 0 10 0" />
                    <Button Content="Finish"
                            IsEnabled="{Binding IsSectionSelected}"
                            Command="{Binding FinishCommand}" />
                </StackPanel>

                <!-- Filter button -->
                <Button 
                    Content="Filter" 
                    Width="100" 
                    HorizontalAlignment="Right" 
                    Command="{Binding OpenSearchDialogCommand}" 
                    CommandParameter="{Binding Columns}"
                    Grid.Column="3"/>
            </Grid>
        </Border>
        <!-- Bottom menu -->
        <Border
            BorderThickness="0 1 0 0"
            BorderBrush="#FFC5C1C1"
            Padding="12 6 12 6"
            Grid.Row="4"
            >
            <Grid>
                <Grid.ColumnDefinitions>
                    <!-- Pagination column -->
                    <ColumnDefinition Width="Auto" />
                    <!-- Items per page column -->
                    <ColumnDefinition Width="Auto" />
                    <!-- Export column -->
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <!-- Pagination -->
                <StackPanel
                    Visibility="{
                        Binding IsThereAnyPages, 
                        Converter={StaticResource BoolToVisibility}, 
                        ConverterParameter=Soft}"
                    Orientation="Horizontal"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Grid.Column="0"
                    >
                    <Button 
                        Content="Previous" 
                        Command="{Binding PreviousPageCommand}"
                        Style="{StaticResource PaginationButton__Left}"
                        />
                    <ListBox
                        ItemsSource="{Binding PageButtons}"
                        SelectedItem="{Binding SelectedPage}"
                        Style="{StaticResource PaginationWrapper}"
                        />
                    <Button 
                        Content="Next" 
                        Command="{Binding NextPageCommand}"
                        Style="{StaticResource PaginationButton__Right}"
                        />
                </StackPanel>

                <!-- Items per page -->
                <StackPanel 
                    Orientation="Horizontal"
                    VerticalAlignment="Center"
                    Margin="12 0 0 0"
                    Grid.Column="1"
                    >
                    <TextBlock
                        Text="Items per page:"
                        FontSize="14"
                        VerticalAlignment="Center"
                        Margin="0 0 6 0"
                        />
                    <TextBox
                        Text="{Binding ItemsPerPage}"
                        Style="{StaticResource WatermarkTextBoxSmall}"
                        Width="45"                        
                        />
                </StackPanel>

                <!-- Export -->
                <usercontrols:PendingButton
                    StartText="Export article PDFs"
                    PendingText="Check articles you want to export..."
                    ActionText="Export selected"
                    IsPending="{
                        Binding Columns,
                        Converter={StaticResource CheckToList},
                        ConverterParameter='Export'}"
                    CanRunAction="{Binding CanExportP}"
                    InitialCommand="{Binding EnableExportCommand}"
                    ActionCommand="{Binding ExportCommand}"
                    CancelCommand="{Binding EnableExportCommand}"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Grid.Column="2"
                    />
            </Grid>
        </Border>
    </Grid>
</UserControl>
