<Page x:Class="MainLib.Views.Pages.BookmarkView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:local="clr-namespace:MainLib.Views.Pages"
      xmlns:properties="clr-namespace:MainLib.ViewModels.Properties;assembly=MainLib.ViewModels"
      xmlns:converters="clr-namespace:MainLib.Views.Converters"
      xmlns:ap="clr-namespace:Lib.Views.Attached_Properties;assembly=Lib.Views"
      xmlns:aps="clr-namespace:Lib.Styles.Attached_Properties;assembly=Lib.Styles"
      xmlns:commonConverters="clr-namespace:Lib.Views.Converters;assembly=Lib.Views"
      xmlns:usercontrols="clr-namespace:Lib.Views.UserControls;assembly=Lib.Views"
      xmlns:notifications="clr-namespace:NotificationService.Controls;assembly=NotificationService"
      xmlns:utils="clr-namespace:MainLib.ViewModels.Utils;assembly=MainLib.ViewModels"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="BookmarkView">

    <Page.Resources>
        <commonConverters:CheckToListConverter x:Key="CheckToList" />
        <commonConverters:ListToVisibilityConverter x:Key="ListToVisibility" />
        <commonConverters:NumberToSICConverter x:Key="NumberToSIC" />
        <commonConverters:BoolToVisibilityConverter x:Key="BoolToVisibility" />
        <commonConverters:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverse" />
        <converters:IntToVisibilityConverter x:Key="IntToVisibility" />
        <converters:EmptyStringToVisibilityConverter x:Key="EmptyStringToVisibility" />
        <converters:BoolToTextHeaderStyleConverter x:Key="BoolToTextHeaderStyle" />
        <converters:AbstractToVisibilityConverter x:Key="AbstractToVisibility" />
        <converters:SortConverter x:Key="SortConverter" />
        <converters:BoolToInverseConverter x:Key="BoolToInverse" />

        <!-- Show abstract -->
        <Storyboard x:Key="ShowAbstract">
            <!-- Show Abstract -->
            <DoubleAnimation              
                Storyboard.TargetName="AbstractWrapper"
                Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                From="0"
                To="1"
                Duration="0:0:0.15"
                />
        </Storyboard>
        <!-- Hide abstract -->
        <Storyboard x:Key="HideAbstract">
            <DoubleAnimation
                Storyboard.TargetName="AbstractWrapper"
                Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                From="1"
                To="0"
                Duration="0:0:0.15"
                />
        </Storyboard>
        <!-- Rotate arrow -->
        <Storyboard x:Key="RotateArrow">
            <DoubleAnimation 
                Storyboard.TargetName="AbstractShowArrow"
                Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                From="0"
                To="180"
                Duration="0:0:0.15"
                />
        </Storyboard>
        <!-- Reset arrow rotation -->
        <Storyboard x:Key="ResetArrowRotation">
            <DoubleAnimation 
                Storyboard.TargetName="AbstractShowArrow"
                Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                From="180"
                To="0"
                Duration="0:0:0.15"
                />
        </Storyboard>

        <!-- Compact view -->
        <DataTemplate DataType="{x:Type utils:CompactViewTemplate}">
            <Grid DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}}">
                <Grid.Resources>
                    <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}" />
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Proxy element to change datagrid columns' DataContext -->
                <ContentControl 
                    Visibility="Collapsed" 
                    Content="{StaticResource ProxyElement}" 
                    Grid.Row="0" 
                    />

                <DataGrid 
                    ItemsSource="{Binding ArticlesCollection}"
                    SelectedItem="{Binding ArticleDataManager.SelectedArticle}"
                    CanUserSortColumns="False"
                    Style="{StaticResource ArticleGrid}"
                    FontSize="{Binding Source={x:Static properties:Settings.Default}, Path=ArticleTextFontSize}"
                    Grid.Row="1"
                    >
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter Property="FontSize" Value="{Binding Source={x:Static properties:Settings.Default}, Path=TextFontSize}" />
                            <Setter Property="Padding" Value="12 8 12 8" />
                            <Setter Property="Background" Value="{DynamicResource shadcn_background_brush}" />
                            <Setter Property="Foreground" Value="{DynamicResource shadcn_muted_foreground_brush}" />
                            <Setter Property="FontFamily" Value="{DynamicResource UIFont}" />
                            <Setter Property="BorderThickness" Value="0 0 0 1" />
                            <Setter Property="BorderBrush" Value="{DynamicResource shadcn_border_brush}" />
                            <Setter Property="Command" Value="{Binding DataContext.SortFromDataGridCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                            <Setter Property="CommandParameter" Value="{Binding Content, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource shadcn_foreground_brush}" />
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Ascending">
                                    <Setter Property="Foreground" Value="{DynamicResource shadcn_foreground_brush}" />
                                    <Setter Property="Background" Value="{DynamicResource shadcn_muted_brush}" />
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Descending">
                                    <Setter Property="Foreground" Value="{DynamicResource shadcn_foreground_brush}" />
                                    <Setter Property="Background" Value="{DynamicResource shadcn_muted_brush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="Padding" Value="18 18 18 18" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                            <ContentPresenter VerticalAlignment="Stretch" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <!-- We need this because on default it sets foreground to white -->
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource shadcn_foreground_brush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.ContextMenu>
                        <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                            <MenuItem 
                                Header="Add comment/SIC" 
                                IsEnabled="{Binding User.IsGuest, Converter={StaticResource BoolToInverse}}"
                                Command="{Binding ArticleDataManager.OpenAddPersonalEditorCommand}"                                 
                                />
                            <MenuItem Header="Edit record" IsEnabled="{Binding User.IsAdmin}" Command="{Binding ArticleDataManager.OpenEditorCommand}" />
                            <MenuItem Header="Edit abstract" IsEnabled="{Binding User.IsAdmin}" Command="{Binding ArticleDataManager.OpenAbstractEditorCommand}" />
                            <!-- Delete article -->
                            <MenuItem Header="Delete article" IsEnabled="{Binding User.IsAdmin}" Command="{Binding ArticleDataManager.DeleteArticleCommand}" />
                            <MenuItem 
                                IsEnabled="{Binding User.IsGuest, Converter={StaticResource BoolToInverse}}"
                                Command="{Binding ArticleDataManager.OpenBookmarkManagerCommand}"
                                >
                                <MenuItem.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="70" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="Bookmark" Grid.Column="0" />
                                        <TextBlock Text="Ctrl+B" Grid.Column="2" />
                                    </Grid>
                                </MenuItem.Header>
                            </MenuItem>
                            <!-- Remove article -->
                            <MenuItem IsEnabled="{Binding ModifyRights}" Command="{Binding ArticleDataManager.RemoveArticleFromBookmarkCommand}" CommandParameter="{Binding Bookmark}">
                                <MenuItem.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="Unbookmark" Grid.Column="0" />
                                        <TextBlock Text="Del" Grid.Column="2" />
                                    </Grid>
                                </MenuItem.Header>
                            </MenuItem>
                            <!-- Copy -->
                            <MenuItem Command="{Binding ArticleDataManager.CopyTitleCommand}">
                                <MenuItem.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="Copy Title" Grid.Column="0" />
                                        <TextBlock Text="Ctrl+C" Grid.Column="2" />
                                    </Grid>
                                </MenuItem.Header>
                            </MenuItem>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.InputBindings>
                        <MouseBinding Gesture="LeftDoubleClick" Command="{Binding ArticleDataManager.OpenFileCommand}" />
                        <KeyBinding Modifiers="Ctrl" Key="C" Command="{Binding ArticleDataManager.CopyTitleCommand}" />
                        <KeyBinding Key="Delete" Command="{Binding ArticleDataManager.RemoveArticleFromBookmarkCommand}" CommandParameter="{Binding Bookmark}" />
                        <KeyBinding 
                            Modifiers="Ctrl" Key="B" 
                            Command="{Binding ArticleDataManager.OpenBookmarkManagerCommand}" 
                            CommandParameter="{Binding ArticleDataManager.SelectedArticle}" 
                            />
                    </DataGrid.InputBindings>
                    <!-- Data grid columns -->
                    <DataGrid.Columns>
                        <!-- Title column -->
                        <DataGridTemplateColumn 
                            Header="Title" 
                            Width="*" 
                            SortMemberPath="Title"
                            SortDirection="{
                                Binding DataContext.SelectedSort, 
                                Source={StaticResource ProxyElement},
                                Converter={StaticResource SortConverter}, 
                                ConverterParameter=Title}"
                            >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <!-- Title -->
                                        <TextBlock 
                                            Text="{Binding Title}"
                                            Style="{StaticResource ArticleText}"
                                            TextWrapping="Wrap"
                                            Grid.Column="0"
                                            Grid.Row="0"
                                            />
                                        <!-- File contains only abstract label -->
                                        <Border
                                            Visibility="{Binding AbstractOnly, Converter={StaticResource IntToVisibility}}"
                                            Padding="8 4 8 4"
                                            CornerRadius="6 6 6 6"
                                            Background="{DynamicResource shadcn_primary_brush}"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Margin="0 0 -7 -7"
                                            Grid.Column="0"
                                            Grid.Row="0"
                                            >
                                            <TextBlock
                                                Text="AO"                                        
                                                Foreground="{DynamicResource shadcn_primary_foreground_brush}"
                                                FontSize="12"
                                                />
                                        </Border>
                                        <!-- Show/Hide abstract button -->
                                        <ToggleButton
                                            IsChecked="{Binding AbstractShown, UpdateSourceTrigger=PropertyChanged}"
                                            Visibility="{Binding AbstractBody, Converter={StaticResource AbstractToVisibility}}"                                    
                                            Style="{x:Null}"
                                            Foreground="{DynamicResource shadcn_primary_brush}"
                                            BorderBrush="{DynamicResource shadcn_border_brush}"
                                            Cursor="Hand"
                                            VerticalAlignment="Top"
                                            Margin="6 0 0 0"
                                            Grid.Column="1"
                                            Grid.Row="0"
                                            >
                                            <ToggleButton.Template>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border
                                                        BorderThickness="1 1 1 1"
                                                        BorderBrush="{TemplateBinding BorderBrush}"                                                
                                                        CornerRadius="6 6 6 6"
                                                        Background="Transparent"
                                                        Padding="6 6 6 6"
                                                        >
                                                        <ContentPresenter />
                                                    </Border>
                                                </ControlTemplate>
                                            </ToggleButton.Template>
                                            <ToggleButton.Content>
                                                <materialDesign:PackIcon 
                                                    x:Name="AbstractShowArrow"
                                                    Kind="ArrowDown"                                            
                                                    Height="14"
                                                    Width="14"
                                                    >
                                                    <materialDesign:PackIcon.RenderTransform>
                                                        <RotateTransform 
                                                            Angle="0" 
                                                            CenterX="7" 
                                                            CenterY="7" 
                                                            />
                                                    </materialDesign:PackIcon.RenderTransform>
                                                </materialDesign:PackIcon>
                                            </ToggleButton.Content>
                                            <ToggleButton.Triggers>
                                                <EventTrigger RoutedEvent="ToggleButton.Checked">
                                                    <BeginStoryboard Storyboard="{StaticResource ShowAbstract}" />
                                                    <BeginStoryboard Storyboard="{StaticResource RotateArrow}" />
                                                </EventTrigger>
                                                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                                    <BeginStoryboard Storyboard="{StaticResource HideAbstract}" />
                                                    <BeginStoryboard Storyboard="{StaticResource ResetArrowRotation}" />
                                                </EventTrigger>
                                            </ToggleButton.Triggers>
                                        </ToggleButton>
                                        <!-- Abstract body -->
                                        <Border
                                            x:Name="AbstractWrapper"
                                            Visibility="{Binding AbstractShown, Converter={StaticResource BoolToVisibility}}"
                                            Margin="0 6 0 0"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="2"
                                            Grid.Row="1"
                                            >
                                            <Border.RenderTransform>
                                                <ScaleTransform ScaleY="0" />
                                            </Border.RenderTransform>
                                            <TextBlock
                                                Text="{Binding AbstractBody}"
                                                Style="{StaticResource ArticleText}"
                                                TextWrapping="Wrap"
                                                TextAlignment="Justify"
                                                Grid.Row="1"
                                                />
                                        </Border>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!-- Authors column -->
                        <DataGridTemplateColumn 
                            Header="Authors" 
                            Width="0.5*"
                            Visibility="{
                                Binding DataContext.Columns, 
                                Source={StaticResource ProxyElement}, 
                                Converter={StaticResource ListToVisibility}, 
                                ConverterParameter='Authors'}"
                            >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock 
                                        Text="{Binding Authors}" 
                                        Style="{StaticResource ArticleText}"
                                        TextWrapping="Wrap" 
                                        />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!-- Keywords column -->
                        <DataGridTemplateColumn 
                            Header="Keywords" 
                            Width="0.5*"
                            Visibility="{
                                Binding DataContext.Columns, 
                                Source={StaticResource ProxyElement}, 
                                Converter={StaticResource ListToVisibility}, 
                                ConverterParameter='Keywords'}"
                            >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock 
                                        Text="{Binding Keywords}" 
                                        Style="{StaticResource ArticleText}"
                                        TextWrapping="Wrap" 
                                        />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!-- Year column -->
                        <DataGridTemplateColumn 
                            Header="Year" 
                            SortMemberPath="Year" 
                            MinWidth="80" 
                            Width="Auto"
                            Visibility="{
                                Binding DataContext.Columns, 
                                Source={StaticResource ProxyElement}, 
                                Converter={StaticResource ListToVisibility}, 
                                ConverterParameter='Year'}"
                            SortDirection="{
                                Binding DataContext.SelectedSort, 
                                Source={StaticResource ProxyElement},
                                Converter={StaticResource SortConverter}, 
                                ConverterParameter=Year}"
                            >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock 
                                        Text="{Binding Year}" 
                                        Style="{StaticResource ArticleText}"
                                        TextWrapping="Wrap" 
                                        />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!-- File column -->
                        <DataGridTemplateColumn 
                            Header="FileName" 
                            SortMemberPath="FileName" 
                            MinWidth="95" 
                            Width="Auto" 
                            Visibility="{
                                Binding DataContext.Columns, 
                                Source={StaticResource ProxyElement}, 
                                Converter={StaticResource ListToVisibility}, 
                                ConverterParameter='FileName'}"
                            SortDirection="{
                                Binding DataContext.SelectedSort, 
                                Source={StaticResource ProxyElement},
                                Converter={StaticResource SortConverter}, 
                                ConverterParameter=FileName}"
                            >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock 
                                        Text="{Binding FileName}" 
                                        Style="{StaticResource ArticleText}"
                                        TextWrapping="Wrap" 
                                        />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!-- Comment column -->
                        <DataGridTemplateColumn 
                            Header="Comment" 
                            SortMemberPath="PersonalComment" 
                            Width="0.4*"
                            Visibility="{
                                Binding DataContext.Columns, 
                                Source={StaticResource ProxyElement}, 
                                Converter={StaticResource ListToVisibility}, 
                                ConverterParameter='PersonalComment'}"
                            SortDirection="{
                                Binding DataContext.SelectedSort, 
                                Source={StaticResource ProxyElement},
                                Converter={StaticResource SortConverter}, 
                                ConverterParameter=PersonalComment}"
                            >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock 
                                        Text="{Binding PersonalComment}" 
                                        Style="{StaticResource ArticleText}"
                                        TextWrapping="Wrap" 
                                        />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!-- SIC column -->
                        <DataGridTemplateColumn 
                            Header="SIC" 
                            SortMemberPath="SIC" 
                            MinWidth="70" 
                            Width="Auto"
                            Visibility="{
                                Binding DataContext.Columns, 
                                Source={StaticResource ProxyElement}, 
                                Converter={StaticResource ListToVisibility}, 
                                ConverterParameter='SIC'}"
                            >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding SIC, Converter={StaticResource NumberToSIC}}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Export column -->
                        <DataGridTemplateColumn 
                            Header="Export" 
                            Width="Auto" 
                            Visibility="{
                                Binding DataContext.Columns, 
                                Source={StaticResource ProxyElement}, 
                                Converter={StaticResource ListToVisibility}, 
                                ConverterParameter='Export'}"
                            >
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                                    <ContentPresenter Margin="10 0 0 0" VerticalAlignment="Stretch" />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox 
                                        IsChecked="{Binding Path=Checked, UpdateSourceTrigger=PropertyChanged}" 
                                        Style="{StaticResource FlatCheckbox}"
                                        Command="{
                                            Binding DataContext.UpdateExportStatusCommand,
                                            RelativeSource={RelativeSource FindAncestor, 
                                            AncestorType={x:Type Page}}}" 
                                        />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </DataTemplate>
        <!-- Full view -->
        <DataTemplate DataType="{x:Type utils:FullViewTemplate}">
            <ListView 
                DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}}"
                ItemsSource="{Binding ArticlesCollection}"
                SelectedItem="{Binding ArticleDataManager.SelectedArticle}"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.VirtualizationMode="Standard"
                >
                <ListView.Style>
                    <Style TargetType="{x:Type ListView}">
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListView}">
                                    <Grid Background="{DynamicResource shadcn_muted_brush}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width=".3*" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width=".4*" />
                                        </Grid.ColumnDefinitions>
                                        <ScrollViewer Grid.Column="1">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Padding" Value="18 12 18 12" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border
                                                    Background="{StaticResource shadcn_background_brush}"
                                                    Padding="{TemplateBinding Padding}"
                                                    CornerRadius="4 4 4 4"
                                                    Margin="0 0 0 12"
                                                    >
                                                    <ContentPresenter />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <!-- Title -->
                                                        <RowDefinition Height="Auto" />
                                                        <!-- Year -->
                                                        <RowDefinition Height="Auto" />
                                                        <!-- Keywords -->
                                                        <RowDefinition Height="Auto" />
                                                        <!-- Authors -->
                                                        <RowDefinition Height="Auto" />
                                                        <!-- Separator -->
                                                        <RowDefinition Height="Auto" />
                                                        <!-- Abstract -->
                                                        <RowDefinition Height="*" />
                                                        <!-- Open file -->
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>

                                                    <!-- Export -->
                                                    <CheckBox 
                                                        Content=""
                                                        IsChecked="{Binding Path=Checked, UpdateSourceTrigger=PropertyChanged}" 
                                                        Command="{
                                                            Binding DataContext.UpdateExportStatusCommand,
                                                            RelativeSource={RelativeSource FindAncestor, 
                                                            AncestorType={x:Type Page}}}"
                                                        Style="{StaticResource FlatCheckbox}"
                                                        Visibility="{
                                                            Binding DataContext.IsExportEnabled, 
                                                            RelativeSource={
                                                            RelativeSource FindAncestor, 
                                                            AncestorType={x:Type Page}}, 
                                                            Converter={StaticResource BoolToVisibility}}"
                                                        Grid.Column="1"
                                                        Grid.Row="0"
                                                        />
                                                    <!-- Title -->
                                                    <TextBlock
                                                        Text="{Binding Title}"
                                                        Style="{StaticResource ArticleHeader}"
                                                        FontFamily="Verdana"
                                                        TextWrapping="Wrap"
                                                        Margin="0 0 0 6"
                                                        Grid.Row="0"
                                                        />
                                                    <!-- Year -->
                                                    <StackPanel
                                                        Orientation="Horizontal"
                                                        Margin="0 0 0 6"
                                                        Grid.Row="1"
                                                        >
                                                        <TextBlock
                                                            Text="{Binding Year}"
                                                            Visibility="{Binding Year, Converter={StaticResource EmptyStringToVisibility}}"
                                                            Style="{StaticResource ArticleSmallText}"
                                                            FontStyle="Italic"
                                                            Margin="0 0 6 0"
                                                            />
                                                        <TextBlock
                                                            Text="{Binding FileName, StringFormat={}({0}), TargetNullValue=''}"
                                                            Visibility="{
                                                                Binding DataContext.User.IsAdmin, 
                                                                RelativeSource={
                                                                RelativeSource FindAncestor, 
                                                                AncestorType={x:Type Page}}, 
                                                                Converter={StaticResource BoolToVisibility}}"
                                                            Style="{StaticResource ArticleSmallText}"
                                                            />
                                                    </StackPanel>
                                                    <!-- Keywords -->
                                                    <TextBlock
                                                        Text="{Binding Keywords}"
                                                        Visibility="{Binding Keywords, Converter={StaticResource EmptyStringToVisibility}}"
                                                        Style="{StaticResource ArticleSmallText}"
                                                        Margin="6 0 0 6"
                                                        Grid.Row="2"
                                                        />
                                                    <!-- Authors -->
                                                    <TextBlock
                                                        Text="{Binding Authors}"
                                                        Visibility="{Binding Authors, Converter={StaticResource EmptyStringToVisibility}}"
                                                        Style="{StaticResource ArticleSmallText}"
                                                        Foreground="{DynamicResource shadcn_foreground_brush}"
                                                        Margin="0 0 0 12"
                                                        Grid.Row="3"
                                                        />
                                                    <!-- Seprator -->
                                                    <Separator 
                                                        Visibility="{Binding AbstractBody, Converter={StaticResource AbstractToVisibility}}"
                                                        Margin="0 0 0 2"
                                                        Grid.Row="4" 
                                                        />
                                                    <!-- Abstract -->
                                                    <TextBlock
                                                        Text="{Binding AbstractBody}"
                                                        Visibility="{Binding AbstractBody, Converter={StaticResource AbstractToVisibility}}"
                                                        Style="{StaticResource ArticleText}"
                                                        TextWrapping="Wrap"
                                                        Margin="0 0 0 12"
                                                        Grid.Row="5"
                                                        />
                                                    <!-- Open file-->
                                                    <Button 
                                                        Content="View PDF"
                                                        Style="{StaticResource ViewPDFButtonStyle}"
                                                        Command="{Binding DataContext.ArticleDataManager.OpenFileCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}}"
                                                        CommandParameter="{Binding}"
                                                        Grid.Row="6"
                                                        />
                                                </Grid>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.Style>
                <ListView.ContextMenu>
                    <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                        <!-- We set these items' commands from code behind -->
                        <MenuItem 
                            Header="Add comment/SIC" 
                            IsEnabled="{Binding User.IsGuest, Converter={StaticResource BoolToInverse}}"
                            Command="{Binding ArticleDataManager.OpenAddPersonalEditorCommand}"                             
                            />
                        <MenuItem Header="Edit record" IsEnabled="{Binding User.IsAdmin}" Command="{Binding ArticleDataManager.OpenEditorCommand}" />
                        <MenuItem Header="Edit abstract" IsEnabled="{Binding User.IsAdmin}" Command="{Binding ArticleDataManager.OpenAbstractEditorCommand}" />
                        <!-- Delete article -->
                        <MenuItem Header="Delete article" IsEnabled="{Binding User.IsAdmin}" Command="{Binding ArticleDataManager.DeleteArticleCommand}" />
                        <MenuItem Header="Remove" IsEnabled="{Binding ModifyRights}" Command="{Binding ArticleDataManager.RemoveArticleFromBookmarkCommand}" CommandParameter="{Binding Bookmark}" />
                        <MenuItem Header="Copy Title" Command="{Binding ArticleDataManager.CopyTitleCommand}" />
                    </ContextMenu>
                </ListView.ContextMenu>
            </ListView>
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <!-- Proxy element row -->
            <RowDefinition Height="Auto" />
            <!-- Ribbon row -->
            <RowDefinition Height="Auto" />
            <!-- Data grid row -->
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Ribbon -->
        <Grid Grid.Row="1">
            <TabControl
            Style="{StaticResource Ribbon}"
            MinHeight="105"
            >
                <!-- View options -->
                <TabItem Header="View">
                    <StackPanel 
                        Orientation="Horizontal"
                        VerticalAlignment="Center"
                        >
                        <RadioButton
                            Content="Compact&#x0a;View"                        
                            Tag="{x:Static materialDesign:PackIconKind.Text}"
                            GroupName="ViewType"
                            Command="{Binding SwitchDataViewCommand}"
                            CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}"
                            IsChecked="True"
                            Style="{StaticResource RibbonRadioButtonIcon}"
                            Margin="0 0 6 0"
                            />
                        <RadioButton
                            Content="Full&#x0a;View"
                            Tag="{x:Static materialDesign:PackIconKind.TextBox}"
                            GroupName="ViewType"
                            Command="{Binding SwitchDataViewCommand}"
                            CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}"
                            Style="{StaticResource RibbonRadioButtonIcon}"
                            Width="54"
                            Margin="0 0 12 0"
                            />
                        <Rectangle
                            Width="3"
                            Fill="{DynamicResource GrayColorBrush}"
                            Margin="0 0 12 0"                        
                            />
                        <StackPanel 
                            Orientation="Horizontal"
                            Visibility="{Binding IsViewCompact, Converter={StaticResource BoolToVisibility}}"
                            >
                            <CheckBox 
                                Content="Authors"
                                IsChecked="{
                                    Binding Columns, 
                                    Converter={StaticResource CheckToList}, 
                                    ConverterParameter='Authors'}" 
                                Style="{StaticResource FlatCheckbox}"
                                Margin="0 0 8 0" 
                                />
                            <CheckBox 
                                Content="Keywords"
                                Style="{StaticResource FlatCheckbox}"
                                Margin="0 0 8 0" 
                                IsChecked="{
                                    Binding Columns, 
                                    Converter={StaticResource CheckToList}, 
                                    ConverterParameter='Keywords'}" 
                                />
                            <CheckBox 
                                Content="Year" 
                                Style="{StaticResource FlatCheckbox}" 
                                Margin="0 0 8 0" 
                                IsChecked="{
                                    Binding Columns, 
                                    Converter={StaticResource CheckToList}, 
                                    ConverterParameter='Year'}" 
                                />
                            <CheckBox 
                                Content="Comment" 
                                Style="{StaticResource FlatCheckbox}"
                                Margin="0 0 8 0" 
                                IsChecked="{
                                    Binding Columns, 
                                    Converter={StaticResource CheckToList}, 
                                    ConverterParameter='PersonalComment'}" 
                                />
                            <CheckBox 
                                Content="SIC" 
                                Style="{StaticResource FlatCheckbox}"
                                IsChecked="{
                                    Binding Columns, 
                                    Converter={StaticResource CheckToList}, 
                                    ConverterParameter='SIC'}" 
                                />
                        </StackPanel>
                        <StackPanel 
                            Orientation="Horizontal"
                            Visibility="{
                                Binding IsViewCompact, 
                                Converter={StaticResource BoolToVisibilityInverse}}"
                            >
                            <TextBlock 
                                Text="Sort by:"
                                Style="{StaticResource DefaultText}"
                                VerticalAlignment="Center"
                                Margin="0 0 6 0"
                                />
                            <ComboBox 
                                ItemsSource="{Binding SortableProperties}" 
                                SelectedItem="{Binding SelectedSortProperty}"
                                Style="{StaticResource ShadcnSelectStyle}"
                                VerticalAlignment="Center"
                                MinWidth="80"
                                Margin="0 0 6 0"
                                />
                            <ComboBox 
                                ItemsSource="{Binding SortDirections}" 
                                SelectedItem="{Binding SelectedSortDirection}"
                                Style="{StaticResource ShadcnSelectStyle}"
                                VerticalAlignment="Center"
                                MinWidth="65"
                                Margin="0 0 6 0"
                                />
                            <Button 
                                Style="{StaticResource ShadcnGhostButton}"
                                VerticalAlignment="Center"
                                Command="{Binding SortFromRibbonCommand}"
                                >
                                <Button.Content>
                                    <materialDesign:PackIcon Kind="Refresh" />
                                </Button.Content>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </TabItem>
                <!-- Export -->
                <TabItem Header="Export">
                    <StackPanel 
                        Orientation="Horizontal"
                        HorizontalAlignment="left"
                        VerticalAlignment="Center"
                        >
                        <!-- Selective export -->
                        <usercontrols:PendingButton
                            StartText="Export article PDFs"
                            PendingText="Check articles you want to export..."
                            ActionText="Export selected"
                            IsPending="{
                                Binding Columns,
                                Converter={StaticResource CheckToList},
                                ConverterParameter='Export'}"
                            CanRunAction="{Binding CanExportP}"
                            InitialCommand="{Binding EnableExportCommand}"
                            ActionCommand="{Binding ExportCommand}"
                            CancelCommand="{Binding EnableExportCommand}"                        
                            Margin="0 0 12 0"
                            />
                        <!-- Whole bookmark export -->
                        <Button 
                            Content="Export whole bookmark PDFs"
                            Command="{Binding ExportBookmarkCommand}"
                            Style="{StaticResource ShadcnButtonPrimary}"
                            VerticalAlignment="Center"
                            />

                    </StackPanel>
                </TabItem>
                <!-- Miscellaneous -->
                <TabItem 
                    Header="Misc"
                    Visibility="{Binding User.IsAdmin, Converter={StaticResource BoolToVisibility}}"
                    >
                    <StackPanel 
                        Orientation="Horizontal"
                        >
                        <Button 
                            Content="RemoveSort"
                            Style="{StaticResource ShadcnButtonPrimary}"
                            Command="{Binding RemoveSortCommand}"
                            />
                    </StackPanel>
                </TabItem>
            </TabControl>
            <TextBlock 
                Text="{Binding Bookmark.Name,FallbackValue=BindingWentWrong}" 
                Style="{StaticResource SmallText}" 
                FontWeight="Bold"
                FontFamily="Verdana"
                Foreground="{StaticResource WhiteColorBrush}"
                VerticalAlignment="Top"
                HorizontalAlignment="Right"
                Margin="0 6 6 0"
                Grid.Row="0" 
                />
        </Grid>

        <!-- Data view -->
        <ContentPresenter 
            Content="{Binding SelectedViewType}" 
            Grid.Row="2"
            />

        <notifications:NotificationArea 
            x:Name="BookmarkNotificationArea" 
            Position="BottomRight" 
            MaxItems="3"
            Margin="0 0 0 6"
            Grid.Row="1"
            Grid.RowSpan="2"
            />
    </Grid>
</Page>
