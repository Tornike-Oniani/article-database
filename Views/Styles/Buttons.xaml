<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:converters="clr-namespace:MainLib.Views.Converters"
                    xmlns:properties="clr-namespace:MainLib.ViewModels.Properties;assembly=MainLib.ViewModels"
                    >

    <converters:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverse" />

    <!-- General button -->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource WhiteColorBrush}" />
    </Style>

    <!-- Export button style -->
    <Style x:Key="ExportButton" TargetType="{x:Type ToggleButton}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="BorderThickness" Value="0 0 0 0" />
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="Padding" Value="12 6 12 6" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border 
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="6 6 6 6"
                            >
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Style triggers -->
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Pagination buttons -->
    <Style x:Key="PaginationButton__Left" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0 0 0 0" />
        <Setter Property="BorderBrush" Value="{DynamicResource GrayColorBrush}" />
        <Setter Property="Padding" Value="12 6 12 6" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="6 0 0 6"
                            >
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Style Triggers -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource GrayColorLightBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource BlackColorAltBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PaginationButton__Right" TargetType="{x:Type Button}" BasedOn="{StaticResource PaginationButton__Left}">
        <Setter Property="BorderThickness" Value="0 1 1 1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="0 6 6 0"
                            >
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Item action button -->
    <Style x:Key="ItemActionButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Padding" Value="6 6 6 6" />
        <Setter Property="BorderThickness" Value="1 1 1 1" />
        <Setter Property="BorderBrush" Value="{DynamicResource shadcn_border_brush}" />
        <Setter Property="Background" Value="{DynamicResource shadcn_muted_brush}" />
        <Setter Property="Foreground" Value="{DynamicResource shadcn_muted_foreground_brush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!-- Outline border -->
                    <Border
                        x:Name="outline"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="4 4 4 4"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        >
                        <!-- Icon -->
                        <materialDesign:PackIcon
                            Kind="{TemplateBinding Tag}"
                            Width="20"
                            Height="20"
                            VerticalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}" 
                            />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Text button -->
    <Style x:Key="TextButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Padding" Value="6 0 6 0" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Text="{Binding}"
                        FontWeight="Bold"
                        TextDecorations="Underline"
                        Foreground="{StaticResource LabelColorBrush}"
                        />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="Transparent">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{x:Null}">
        <Setter Property="Padding" Value="6 0 6 0" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Text="{Binding}"
                        FontWeight="Bold"
                        TextDecorations="Underline"
                        Foreground="{StaticResource LabelColorBrush}"
                        />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="Transparent">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RibbonRadioButtonIcon" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource shadcn_foreground_brush}" />
        <Setter Property="Padding" Value="4 4 4 4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="4 4 4 4"
                        >
                        <StackPanel>
                            <materialDesign:PackIcon
                                Kind="{TemplateBinding Tag}"
                                Foreground="{TemplateBinding Foreground}"
                                Width="24"
                                Height="24"
                                HorizontalAlignment="Center"
                                />
                            <TextBlock
                                Text="{TemplateBinding Content}"
                                Foreground="{TemplateBinding Foreground}"
                                TextWrapping="Wrap"
                                TextAlignment="Center"
                                />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource shadcn_accent_brush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource shadcn_accent_brush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Generic button -->
    <Style x:Key="GenericButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="BorderThickness" Value="0 0 0 0" />
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="Padding" Value="12 6 12 6" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border 
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="3 3 3 3"
                            >
                            <ContentPresenter 
                                HorizontalAlignment="Center"
                                />
                        </Border>
                        <Border
                            Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityInverse}}"
                            Background="#ffffff"
                            Opacity="0.5"
                            />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Secondary button -->
    <Style x:Key="SecondaryButton" TargetType="{x:Type Button}" BasedOn="{StaticResource GenericButton}">
        <Setter Property="Background" Value="{StaticResource WhiteColorBrush}" />
        <Setter Property="BorderThickness" Value="1 1 1 1" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
    </Style>
    <Style x:Key="SecondaryButtonAlt" TargetType="{x:Type Button}" BasedOn="{StaticResource GenericButton}">
        <Setter Property="Background" Value="{DynamicResource GrayColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextColorBrush}" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
</ResourceDictionary>