<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:local="clr-namespace:Lib.Styles"
                    xmlns:converters="clr-namespace:Lib.Styles.Converters">
    
    <converters:IntToFontWeightConverter x:Key="IntToFontWeight" />

    <!-- Bookmark manager -->
    <Style x:Key="BookmarkManagerList" TargetType="{x:Type ListView}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <CheckBox 
                              FontWeight="{Binding Bookmark.Global, Converter={StaticResource IntToFontWeight}}"
                              Padding="8"
                              IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}"
                              Command="{Binding DataContext.CheckChangedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                              CommandParameter="{Binding}">
                        <TextBlock Text="{Binding Bookmark.Name}" TextWrapping="Wrap" />
                    </CheckBox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                    <Setter Property="Padding" Value="8 0 0 0" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Reference manager -->
    <Style x:Key="ReferenceManagerList" TargetType="{x:Type ListView}" BasedOn="{StaticResource BookmarkManagerList}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <CheckBox 
                              Padding="8"
                              IsChecked="{Binding IsChecked}"
                              Command="{Binding DataContext.CheckChangedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                              CommandParameter="{Binding}">
                        <TextBlock Text="{Binding Reference.Name}" TextWrapping="Wrap" />
                    </CheckBox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CleanItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                <Setter Property="Background" Value="#ffffff" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                <Setter Property="Background" Value="#f7f7f7" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource LightHighlightColorBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource LightSelectionColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Bookmark list -->
    <Style x:Key="BookmarkList" TargetType="{x:Type ListView}" BasedOn="{x:Null}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="BorderThickness" Value="0" />
        <!-- Removes padding and margin from items (So that mouse double click will be caught without clicking exactly on text) -->
        <Setter Property="ItemContainerStyle" Value="{StaticResource CleanItem}" />
        <!-- Item template on how to show bound data-->
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <!-- Wrapper -->
                    <Border x:Name="wrapper" 
                            Padding="10" 
                            Background="Transparent" 
                            BorderThickness="0 0 0 1" 
                            BorderBrush="LightGray">
                        <!-- Command binding to mouse double click -->
                        <Border.InputBindings>
                            <MouseBinding Gesture="LeftDoubleClick" Command="{Binding DataContext.OpenBookmarkCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Page}}" CommandParameter="{Binding}" />
                        </Border.InputBindings>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <!-- Bookmark name column -->
                                <ColumnDefinition Width="*" />
                                <!-- Buttons column -->
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Bookmark name -->
                            <StackPanel Grid.Column="0">
                                <TextBlock x:Name="bookmarkName" 
                                           Text="{Binding Name}"
                                           TextWrapping="Wrap"
                                           FontSize="18" />
                                <TextBlock x:Name="articlesCount" Text="{Binding ArticlesCount, StringFormat='Number of articles: {0}'}"
                                           Foreground="Gray" 
                                           FontSize="16" 
                                           Visibility="Collapsed"
                                           Opacity="0.0" />
                            </StackPanel>
                            <!-- Buttons -->
                            <StackPanel Orientation="Horizontal"
                                        HorizontalAlignment="Right"
                                        Grid.Column="1">
                                <!-- Edit button-->
                                <Button x:Name="EditButton"
                                        Style="{x:Null}"
                                        Visibility="Hidden" 
                                        Opacity="0.0"
                                        Cursor="Hand"
                                        Margin="0 0 10 0"
                                        Command="{Binding DataContext.EditBookmarkCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Page}}"
                                        CommandParameter="{Binding}">
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Border Background="Transparent">
                                                <materialDesign:PackIcon x:Name="Icon" 
                                                                     Kind="Edit"
                                                                     Height="25"
                                                                     Width="25"
                                                                     VerticalAlignment="Center"
                                                                     Foreground="#28B9B5" />
                                            </Border>

                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="Icon" Property="Foreground" Value="#FF62EE62" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <!-- Delete button -->
                                <Button x:Name="DeleteButton"
                                        Style="{x:Null}"
                                        Visibility="Hidden" 
                                        Opacity="0.0"
                                        Cursor="Hand"
                                        Command="{Binding DataContext.DeleteBookmarkCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Page}}"
                                        CommandParameter="{Binding}">
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Border Background="Transparent">
                                                <materialDesign:PackIcon x:Name="DeleteIcon" 
                                                                     Kind="MinusCircleOutline"
                                                                     Height="25"
                                                                     Width="25"
                                                                     VerticalAlignment="Center"
                                                                     Foreground="#FF5049" />
                                            </Border>

                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="DeleteIcon" Property="Foreground" Value="Red" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <!-- Trigger -->
                    <DataTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DeleteButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="EditButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="articlesCount" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="articlesCount"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="0 5 10 5"
                                                            Duration="0:0:0.3" />
                                        <DoubleAnimation Storyboard.TargetName="EditButton"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1.0"
                                                         Duration="0:0:0.3" />
                                        <DoubleAnimation Storyboard.TargetName="DeleteButton"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1.0"
                                                         Duration="0:0:0.3" />
                                        <DoubleAnimation Storyboard.TargetName="articlesCount"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1.0"
                                                         Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="articlesCount"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="0"
                                                            Duration="0:0:0" />
                                        <DoubleAnimation Storyboard.TargetName="articlesCount"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.0"
                                                         Duration="0:0:0" />
                                        <DoubleAnimation Storyboard.TargetName="EditButton"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.0"
                                                         Duration="0:0:0" />
                                        <DoubleAnimation Storyboard.TargetName="DeleteButton"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.0"
                                                         Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>