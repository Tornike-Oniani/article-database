<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:local="clr-namespace:Lib.Styles"
                    xmlns:converters="clr-namespace:Lib.Styles.Converters"
                    xmlns:ap="clr-namespace:Lib.Styles.Attached_Properties">

    <converters:EmptyStringToVisibility x:Key="EmptyStringToVisibility" />

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource LabelColorBrush}" />
        <Setter Property="TextAlignment" Value="Left" />
    </Style>

    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignPasswordBox}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{StaticResource LabelColorBrush}" />
    </Style>

    <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource MaterialDesignListBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource GrayColorBrush}" />
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MaterialDesignListBoxItem}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style x:Key="ShadcnTextBox" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
        <Setter Property="BorderThickness" Value="1 1 1 1" />
        <Setter Property="BorderBrush" Value="{StaticResource shadcn_border_brush}" />
        <Setter Property="Padding" Value="6 4 6 4" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{StaticResource ShadcnTextColorBrush}" />
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border
                            x:Name="ring"
                            BorderThickness="2 2 2 2"
                            BorderBrush="{StaticResource shadcn_ring_brush}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="8 8 8 8"
                            Margin="-4 -4 -4 -4"
                            />
                        <Border
                            Padding="{TemplateBinding Padding}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="6 6 6 6"
                            >
                            <Grid>
                                <ScrollViewer 
                                    x:Name="PART_ContentHost"
                                    VerticalAlignment="Center"
                                    />
                                <TextBlock
                                    x:Name="watermark"
                                    IsHitTestVisible="False"
                                    Visibility="Collapsed"
                                    VerticalAlignment="Center"
                                    Text="{TemplateBinding ap:TextBoxHelper.Watermark}"
                                    Foreground="{StaticResource shadcn_muted_foreground_brush}"
                                    FontSize="14"
                                    Margin="7 0 0 0"
                                    />
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ring" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter TargetName="ring" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="watermark" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Error template -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Border
                            Padding="6 0 1 0">
                            <TextBlock 
                                Text="{
                                    Binding ElementName=placeholder, 
                                    Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                                Foreground="{StaticResource RedColorBrush}"
                                FontSize="16"
                                />
                        </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <!-- Style triggers -->
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource RedColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WatermarkTextBox" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
        <!-- Generic styling -->
        <Setter Property="BorderThickness" Value="1 1 1 1" />
        <Setter Property="BorderBrush" Value="{StaticResource shadcn_border_brush}" />
        <Setter Property="Background" Value="{StaticResource WhiteColorBrush}" />
        <Setter Property="Padding" Value="4 4 4 4" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource shadcn_primary_brush}" />
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
        <!-- Template -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Padding="0 3 0 3">
                        <Grid>
                            <!-- Textbox area -->
                            <Border
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="6 6 6 6"
                                Padding="{TemplateBinding Padding}"
                                >
                                <ScrollViewer 
                                    x:Name="PART_ContentHost"
                                    VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                    />
                            </Border>
                            <!-- Watermark -->
                            <Border 
                                x:Name="watermark"
                                Visibility="{TemplateBinding ap:TextBoxHelper.Watermark,Converter={StaticResource EmptyStringToVisibility}}"
                                Padding="4 1 4 0"
                                Background="{StaticResource WhiteColorBrush}"
                                VerticalAlignment="Top"
                                HorizontalAlignment="Left"
                                Margin="6 9 0 0"
                                >
                                <Border.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </Border.RenderTransform>
                                <TextBlock
                                    x:Name="watermark__text"
                                    IsHitTestVisible="False"
                                    Text="{TemplateBinding ap:TextBoxHelper.Watermark}"
                                    Foreground="{StaticResource LabelColorBrush}"
                                    FontSize="14"
                                    />
                            </Border>
                        </Grid>
                    </Border>

                    <!-- Triggers on template level -->
                    <ControlTemplate.Triggers>
                        <!-- Watermark animation -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="watermark" Property="Background" Value="Transparent" />
                            <!-- Return watermark on original position (We inversed animation to enter and exit actions 
                                 because I don't know how to check for NOT null in text condition -->
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="watermark"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                            From="-20" 
                                            To="0"
                                            Duration="0:0:0.1"
                                            />
                                        <DoubleAnimation 
                                            Storyboard.TargetName="watermark__text"
                                            Storyboard.TargetProperty="FontSize"
                                            From="14" 
                                            To="16"
                                            Duration="0:0:0.1"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <!-- Psuh watermark to top -->
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="watermark"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                            From="0" 
                                            To="-20"
                                            Duration="0:0:0.1"
                                            />
                                        <DoubleAnimation 
                                            Storyboard.TargetName="watermark__text"
                                            Storyboard.TargetProperty="FontSize"
                                            From="16" 
                                            To="14"
                                            Duration="0:0:0.1"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <!-- Focused styling-->
                        <Trigger Property="IsFocused" Value="True">
                            <!-- Color watermark blue -->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- #86b7fe -->
                                        <ColorAnimation 
                                            Storyboard.TargetName="watermark__text"
                                            Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                                            To="{StaticResource ShadcnTextColor}"
                                            Duration="0:0:0.1"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <!-- Return watermark color on original color -->
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation 
                                            Storyboard.TargetName="watermark__text"
                                            Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                                            To="{StaticResource Gray-BlueColorDark}"
                                            Duration="0:0:0"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Error template -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Border
                            Padding="6 0 1 0">
                            <TextBlock 
                                Text="{
                                    Binding ElementName=placeholder, 
                                    Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                                Foreground="{StaticResource RedColorBrush}"
                                FontSize="16"
                                />
                        </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <!-- Triggers -->
        <Style.Triggers>
            <!-- Focused styling -->
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ShadcnBlackColorBrush}" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource RedColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WatermarkTextBoxSmall" TargetType="{x:Type TextBox}">
        <!-- Generic styling -->
        <Setter Property="BorderThickness" Value="1 1 1 1" />
        <Setter Property="BorderBrush" Value="{StaticResource Gray-BlueColorDarkBrush}" />
        <Setter Property="Background" Value="{StaticResource WhiteColorBrush}" />
        <Setter Property="Padding" Value="3 3 3 3" />
        <Setter Property="FontSize" Value="16" />
        <!-- Template -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <!-- Textbox area -->
                        <Border
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}"
                            >
                            <ScrollViewer 
                                x:Name="PART_ContentHost"
                                VerticalAlignment="Center"
                                />
                        </Border>
                        <!-- Watermark -->
                        <Border 
                            x:Name="watermark"
                            Padding="4 0 4 0"
                            Background="{StaticResource WhiteColorBrush}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            Margin="8 0 0 0"
                            >
                            <Border.RenderTransform>
                                <TranslateTransform X="0" Y="0" />
                            </Border.RenderTransform>
                            <TextBlock
                                x:Name="watermark__text"
                                Text="{TemplateBinding ap:TextBoxHelper.Watermark}"
                                IsHitTestVisible="False"
                                Foreground="{StaticResource Gray-BlueColorDarkBrush}"
                                FontSize="{TemplateBinding FontSize}"
                                />
                        </Border>
                    </Grid>

                    <!-- Triggers on template level -->
                    <ControlTemplate.Triggers>
                        <!-- Watermark animation -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="watermark" Property="Background" Value="Transparent" />
                            <!-- Return watermark on original position (We inversed animation to enter and exit actions 
                                 because I don't know how to check for NOT null in text condition -->
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="watermark"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                            From="-18" 
                                            To="0"
                                            Duration="0:0:0"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <!-- Psuh watermark to top -->
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="watermark"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                            From="0" 
                                            To="-18"
                                            Duration="0:0:0.1"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <!-- Focused styling-->
                        <Trigger Property="IsFocused" Value="True">
                            <!-- Color watermark blue -->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- #86b7fe-->
                                        <ColorAnimation 
                                            Storyboard.TargetName="watermark__text"
                                            Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                                            To="{StaticResource ShadcnBlackColor}"
                                            Duration="0:0:0.1"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <!-- Return watermark color on original color -->
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation 
                                            Storyboard.TargetName="watermark__text"
                                            Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                                            To="{StaticResource Gray-BlueColorDark}"
                                            Duration="0:0:0"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(ap:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="">
                            <Setter TargetName="watermark" Property="Height" Value="0" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Triggers -->
        <Style.Triggers>
            <!-- Focused styling -->
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ShadcnBlackColorBrush}" /> <!-- #86b7fe-->
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WatermarkPasswordBox" TargetType="{x:Type PasswordBox}" BasedOn="{x:Null}">
        <!-- Generic styling -->
        <Setter Property="BorderThickness" Value="1 1 1 1" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderGrayColorBrush}" />
        <Setter Property="Background" Value="{StaticResource WhiteColorBrush}" />
        <Setter Property="Padding" Value="4 4 4 4" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource BlackColorAltBrush}" />
        <!-- Template -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <!-- Textbox area -->
                        <Border
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}"
                            >
                            <ScrollViewer 
                                x:Name="PART_ContentHost"
                                VerticalAlignment="Center"
                                />
                        </Border>
                        <!-- Watermark -->
                        <Border 
                            x:Name="watermark"
                            Padding="4 1 4 0"
                            Background="{StaticResource WhiteColorBrush}"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left"
                            Margin="6 9 0 0"
                            >
                            <Border.RenderTransform>
                                <TranslateTransform X="0" Y="0" />
                            </Border.RenderTransform>
                            <TextBlock
                                x:Name="watermark__text"
                                Text="{TemplateBinding ap:TextBoxHelper.Watermark}"
                                IsHitTestVisible="False"
                                Foreground="{StaticResource LabelColorBrush}"
                                FontSize="14"
                                />
                        </Border>
                    </Grid>

                    <!-- Triggers on template level -->
                    <ControlTemplate.Triggers>
                        <!-- Watermark animation -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="Tag" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="watermark" Property="Background" Value="Transparent" />
                            <!-- Return watermark on original position (We inversed animation to enter and exit actions 
                                 because I don't know how to check for NOT null in text condition -->
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="watermark"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                            From="-20" 
                                            To="0"
                                            Duration="0:0:0.1"
                                            />
                                        <DoubleAnimation 
                                            Storyboard.TargetName="watermark__text"
                                            Storyboard.TargetProperty="FontSize"
                                            From="14" 
                                            To="16"
                                            Duration="0:0:0.1"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <!-- Psuh watermark to top -->
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="watermark"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                            From="0" 
                                            To="-20"
                                            Duration="0:0:0.1"
                                            />
                                        <DoubleAnimation 
                                            Storyboard.TargetName="watermark__text"
                                            Storyboard.TargetProperty="FontSize"
                                            From="16" 
                                            To="14"
                                            Duration="0:0:0.1"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <!-- Focused styling-->
                        <Trigger Property="IsFocused" Value="True">
                            <!-- Color watermark blue -->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- #86b7fe -->
                                        <ColorAnimation 
                                            Storyboard.TargetName="watermark__text"
                                            Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                                            To="{StaticResource ShadcnBlackColor}"
                                            Duration="0:0:0.1"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <!-- Return watermark color on original color -->
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation 
                                            Storyboard.TargetName="watermark__text"
                                            Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                                            To="{StaticResource Gray-BlueColorDark}"
                                            Duration="0:0:0"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Triggers -->
        <Style.Triggers>
            <!-- Focused styling -->
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ShadcnBlackColorBrush}" />
                <!-- #86b7fe-->
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>