<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:local="clr-namespace:Lib.Styles"
                    xmlns:converters="clr-namespace:Lib.Styles.Converters"
                    >

    <converters:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverse" />

    <!-- Window control buttons -->
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="8 8 8 8" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{DynamicResource shadcn_foreground_brush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <materialDesign:PackIcon 
                            x:Name="icon"
                            Kind="{TemplateBinding Tag}" 
                            Foreground="{TemplateBinding Foreground}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center" 
                            />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource shadcn_secondary_brush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RedColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DialogCloseButton" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowControlButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource shadcn_foreground_brush}" />
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButtonAlt" BasedOn="{StaticResource WindowControlButton}">
        <Setter Property="Foreground" Value="{StaticResource WhiteColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButtonAlt" BasedOn="{StaticResource WindowCloseButton}">
        <Setter Property="Foreground" Value="{StaticResource WhiteColorBrush}" />
    </Style>

    <!-- Hoverless Button -->
    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- System icon button -->
    <Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style x:Key="ShadcnButtonPrimary" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Padding" Value="16 8 16 8" />
        <Setter Property="Background" Value="{DynamicResource shadcn_primary_brush}" />
        <Setter Property="BorderThickness" Value="0 0 0 0" />
        <Setter Property="Foreground" Value="{DynamicResource shadcn_primary_foreground_brush}" />
        <Setter Property="FontFamily" Value="{DynamicResource UIFont}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="4 4 4 4"
                        >
                        <ContentPresenter 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource shadcn_primary_brush_hover}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ShadcnButtonSecondary" TargetType="{x:Type Button}" BasedOn="{StaticResource ShadcnButtonPrimary}">
        <Setter Property="Background" Value="{DynamicResource shadcn_secondary_brush}" />
        <Setter Property="Foreground" Value="{DynamicResource shadcn_secondary_foreground_brush}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource shadcn_secondary_brush_hover}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ShadcnButtonOutline" TargetType="{x:Type Button}" BasedOn="{StaticResource ShadcnButtonPrimary}">
        <Setter Property="BorderThickness" Value="1 1 1 1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ShadcnBorderColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource shadcn_background_brush}" />
        <Setter Property="Foreground" Value="{DynamicResource shadcn_secondary_foreground_brush}" />
        <Setter Property="FontWeight" Value="SemiBold" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource shadcn_secondary_brush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ShadcnGhostButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Foreground" Value="{DynamicResource shadcn_foreground_brush}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Background" Value="{DynamicResource shadcn_background_brush}" />
        <Setter Property="BorderThickness" Value="0 0 0 0" />
        <Setter Property="Padding" Value="12 8 12 8" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="4 4 4 4">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource shadcn_secondary_brush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ViewPDFButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Foreground" Value="{DynamicResource shadcn_muted_foreground_brush}" />
        <Setter Property="BorderThickness" Value="0 0 0 0" />
        <Setter Property="BorderBrush" Value="{StaticResource TextHighlightColorBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel 
                        Orientation="Horizontal" 
                        Background="Transparent"
                        >
                        <materialDesign:PackIcon
                            Kind="FilePdf"
                            Width="24"
                            Height="24"
                            Foreground="{TemplateBinding Foreground}"
                            Margin="0 0 6 0"
                            />
                        <Border
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            VerticalAlignment="Center"
                            >
                            <TextBlock
                                Text="{TemplateBinding Content}"
                                Style="{StaticResource DefaultText}"
                                Foreground="{TemplateBinding Foreground}"
                                />
                        </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource shadcn_foreground_brush}" />
                <Setter Property="BorderThickness" Value="0 0 0 2" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>