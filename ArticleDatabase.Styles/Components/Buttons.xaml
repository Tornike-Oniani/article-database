<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:local="clr-namespace:Lib.Styles">

    <!-- Window control buttons -->
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{StaticResource GrayColorDarkBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <materialDesign:PackIcon x:Name="icon"
                                                 Kind="{TemplateBinding Tag}" 
                                                 VerticalAlignment="Center"
                                                 HorizontalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="icon" Property="Foreground" Value="{StaticResource WhiteColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryColorBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource GrayColorLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RedColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButtonAlt" BasedOn="{StaticResource WindowControlButton}">
        <Setter Property="Foreground" Value="{StaticResource WhiteColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButtonAlt" BasedOn="{StaticResource WindowCloseButton}">
        <Setter Property="Foreground" Value="{StaticResource WhiteColorBrush}" />
    </Style>

    <!-- General button -->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Foreground" Value="{StaticResource WhiteColorBrush}" />
    </Style>
    <!-- Hoverless Button -->
    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- System icon button -->
    <Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Padding" Value="5" />
    </Style>
    <!-- Export button style -->
    <Style x:Key="ExportButton" TargetType="{x:Type ToggleButton}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="BorderThickness" Value="0 0 0 0" />
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="Padding" Value="12 6 12 6" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border 
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="6 6 6 6"
                            >
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Style triggers -->
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Pagination buttons -->
    <Style x:Key="PaginationButton__Left" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{StaticResource WhiteColorBrush}" />
        <Setter Property="BorderThickness" Value="1 1 0 1" />
        <Setter Property="BorderBrush" Value="{DynamicResource GrayColorBrush}" />
        <Setter Property="Padding" Value="12 6 12 6" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="6 0 0 6"
                            >
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Style Triggers -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource GrayColorLightBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource BlackColorAltBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PaginationButton__Right" TargetType="{x:Type Button}" BasedOn="{StaticResource PaginationButton__Left}">
        <Setter Property="BorderThickness" Value="0 1 1 1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="0 6 6 0"
                            >
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Item action button -->
    <Style x:Key="ItemActionButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Padding" Value="6 6 6 6" />
        <Setter Property="BorderThickness" Value="1 1 1 1" />
        <Setter Property="BorderBrush" Value="{StaticResource LabelColorBrush}" />
        <Setter Property="Background" Value="{StaticResource WhiteColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource LabelColorBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!-- Outline border -->
                    <Border
                        x:Name="outline"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="4"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        >
                        <!-- Shadow -->
                        <Border.BitmapEffect>
                            <DropShadowBitmapEffect 
                                Color="Black"
                                Direction="-60"
                                ShadowDepth="5"
                                Softness="10"
                                Opacity="0.1"                        
                                />
                        </Border.BitmapEffect>
                        <!-- Icon -->
                        <materialDesign:PackIcon
                            Kind="{TemplateBinding Tag}"
                            Width="20"
                            Height="20"
                            VerticalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}" 
                            />
                    </Border>

                    <!-- Control template triggers -->
                    <ControlTemplate.Triggers>
                        <!-- Mouse over darker shadow -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="outline" Property="BitmapEffect">
                                <Setter.Value>
                                    <DropShadowBitmapEffect 
                                        Color="Black"
                                        Direction="-60"
                                        ShadowDepth="5"
                                        Softness="10"
                                        Opacity="0.2" 
                                        />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>